
name: Documentation Checks and Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  check-links:
    name: Check for broken links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check for broken links
        run: npx @docusaurus/lqip-loader . --check
        continue-on-error: true

  validate-dictionary:
    name: Validate against dictionary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install CSpell
        run: npm install -g cspell
      
      - name: Check spelling
        run: cspell "**/*.md" "**/*.mdx"
        continue-on-error: true

  check-style:
    name: Check style guide compliance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Vale
        run: |
          wget https://github.com/errata-ai/vale/releases/download/v2.15.4/vale_2.15.4_Linux_64-bit.tar.gz
          mkdir -p bin
          tar -xvzf vale_2.15.4_Linux_64-bit.tar.gz -C bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      
      - name: Check documentation style
        run: |
          vale --minAlertLevel error .
        continue-on-error: true

  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      - name: Create 404.html for client-side routing
        run: cp dist/index.html dist/404.html
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./dist
          if-no-files-found: error

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # Set permissions for GITHUB_TOKEN
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./dist
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./dist
          branch: gh-pages
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
