{"version":3,"file":"DocPage-CY0STZcB.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-left.js","../../node_modules/lucide-react/dist/esm/icons/calendar.js","../../src/utils/docs/navigation.ts","../../src/utils/docs/loader.ts","../../src/components/docs/DocNavigation.tsx","../../src/components/DocMetadata.tsx","../../src/components/docs/DocBreadcrumb.tsx","../../src/components/docs/DocHeader.tsx","../../src/pages/docs/DocPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", [\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\n]);\n\nexport { ArrowLeft as default };\n//# sourceMappingURL=arrow-left.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Calendar = createLucideIcon(\"Calendar\", [\n  [\"path\", { d: \"M8 2v4\", key: \"1cmpym\" }],\n  [\"path\", { d: \"M16 2v4\", key: \"4m81vk\" }],\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"4\", rx: \"2\", key: \"1hopcy\" }],\n  [\"path\", { d: \"M3 10h18\", key: \"8toen8\" }]\n]);\n\nexport { Calendar as default };\n//# sourceMappingURL=calendar.js.map\n","\n/**\n * Utilities for document navigation\n */\nimport { SidebarItem } from './types';\n\n/**\n * Find the next and previous pages for navigation\n */\nexport const getNavigationLinks = (currentPath: string, sidebarStructure: any): { \n  prev: SidebarItem | null, \n  next: SidebarItem | null \n} => {\n  let allPages: SidebarItem[] = [];\n  \n  // Flatten the sidebar structure to get an ordered list of all pages\n  sidebarStructure.sections.forEach((section: any) => {\n    allPages.push(section); // Add section overview page\n    \n    if (section.items) {\n      section.items.forEach((item: SidebarItem) => {\n        allPages.push(item);\n      });\n    }\n  });\n  \n  // Find the current page index\n  const currentIndex = allPages.findIndex(page => page.path === currentPath);\n  \n  // If not found or at boundaries, return null\n  const prev = currentIndex > 0 ? allPages[currentIndex - 1] : null;\n  const next = currentIndex < allPages.length - 1 ? allPages[currentIndex + 1] : null;\n  \n  return { prev, next };\n};\n","\nimport { loadMarkdownFile as originalLoadMarkdownFile } from './file-loader';\nimport { \n  getCurrentVersion, \n  getVersionConfig, \n  extractVersionFromPath, \n  getBranchForVersion,\n  isDocumentLevelVersioning,\n  isGlobalVersioning,\n  isBranchVersioning\n} from './versions';\n\n/**\n * Load a markdown file with version support\n */\nexport const loadMarkdownFile = async (path: string): Promise<string> => {\n  const config = getVersionConfig();\n  \n  if (!config.enabled) {\n    // If versioning is disabled, use the original loader\n    return originalLoadMarkdownFile(path);\n  }\n  \n  // Extract version from path if present\n  const { version: pathVersion, basePath } = extractVersionFromPath(`/docs/${path}`);\n  const version = pathVersion || getCurrentVersion().name;\n  \n  try {\n    // Handle different versioning strategies\n    if (isGlobalVersioning()) {\n      // Global versioning: entire documentation set shares the same version\n      console.log(`Loading with global versioning: ${version}`);\n      \n      // For this demo, we'll use the original loader but add a version indicator\n      const content = await originalLoadMarkdownFile(path);\n      \n      // Don't modify for the default version\n      const currentVersion = getCurrentVersion();\n      if (version === currentVersion.name || version === 'latest') {\n        return content;\n      }\n      \n      // Add version indicator for non-default versions\n      return `\n> **Note:** You are viewing the documentation for version **${version}**.\n\n${content}\n`;\n    } \n    else if (isDocumentLevelVersioning()) {\n      // Document-level versioning: each document may have specific versions\n      console.log(`Loading with document-level versioning for path: ${path}`);\n      \n      // This would typically check document metadata to see if this version exists\n      // For this demo, we'll use the original loader but add a version indicator\n      const content = await originalLoadMarkdownFile(path);\n      \n      // Add document-specific version indicator\n      return `\n> **Note:** You are viewing the document-specific version **${version}** of this page.\n\n${content}\n`;\n    }\n    else if (isBranchVersioning()) {\n      // Branch-based versioning: different versions are in different branches\n      const branch = getBranchForVersion(version);\n      console.log(`Loading from branch: ${branch} for version ${version}`);\n      \n      // This would typically load from a different source based on branch\n      // For this demo, we'll use the original loader but add a branch indicator\n      const content = await originalLoadMarkdownFile(path);\n      \n      // Add branch indicator\n      return `\n> **Note:** You are viewing the documentation from branch **${branch}** (version **${version}**).\n\n${content}\n`;\n    }\n    \n    // Default fallback - just load the file without version info\n    return originalLoadMarkdownFile(path);\n  } catch (error) {\n    console.error(`Error loading versioned markdown file: ${path} (version: ${version})`, error);\n    throw error;\n  }\n};\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowLeft, ArrowRight } from 'lucide-react';\nimport { SidebarItem } from '@/utils/docs/types';\n\ninterface NavLink {\n  path: string;\n  title: string;\n}\n\ninterface DocNavigationProps {\n  prev: NavLink | null;\n  next: NavLink | null;\n}\n\nconst DocNavigation: React.FC<DocNavigationProps> = ({ prev, next }) => {\n  return (\n    <div className=\"flex items-center justify-between mt-12 pt-6 border-t\">\n      {prev ? (\n        <Link \n          to={prev.path} \n          className=\"flex items-center gap-2 text-primary hover:text-primary/80 transition-colors border border-border/30 rounded-lg px-4 py-2 hover:bg-muted/50\"\n        >\n          <ArrowLeft className=\"h-4 w-4\" /> \n          <span>{prev.title}</span>\n        </Link>\n      ) : (\n        <div></div> // Empty div to maintain flex spacing\n      )}\n      \n      {next && (\n        <Link \n          to={next.path} \n          className=\"flex items-center gap-2 text-primary hover:text-primary/80 transition-colors border border-border/30 rounded-lg px-4 py-2 hover:bg-muted/50\"\n        >\n          <span>{next.title}</span>\n          <ArrowRight className=\"h-4 w-4\" />\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default DocNavigation;\n","\nimport React from 'react';\nimport { Calendar, Github } from 'lucide-react';\nimport { extractPublishDate, getGitHubPath } from '@/utils/docs';\nimport content from '../content.json';\n\ninterface DocMetadataProps {\n  markdown: string;\n  githubPath?: string;\n}\n\nconst DocMetadata = ({ markdown, githubPath = \"docs\" }: DocMetadataProps) => {\n  const publishDate = extractPublishDate(markdown);\n  const docPath = getGitHubPath(githubPath);\n  const repoUrl = content.hero.secondaryButtonUrl + docPath;\n  \n  return (\n    <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2 py-3 px-4 bg-muted/40 border rounded-lg text-sm mb-6\">\n      <div className=\"flex items-center gap-2 text-muted-foreground\">\n        <Calendar className=\"h-4 w-4\" />\n        <span>Published: {publishDate}</span>\n      </div>\n      \n      <a \n        href={repoUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex items-center gap-1.5 text-primary hover:underline\"\n      >\n        <Github className=\"h-4 w-4\" />\n        <span>Edit on GitHub</span>\n      </a>\n    </div>\n  );\n};\n\nexport default DocMetadata;\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowRight } from 'lucide-react';\n\ninterface DocBreadcrumbProps {\n  path: string;\n}\n\nconst DocBreadcrumb: React.FC<DocBreadcrumbProps> = ({ path }) => {\n  // Extract title from path\n  const pathSegments = path.split('/').filter(Boolean);\n  const title = pathSegments.length > 1 \n    ? pathSegments[pathSegments.length - 1]\n        .split('-')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ')\n    : 'Documentation';\n    \n  return (\n    <div className=\"square-docs-section\">\n      <div className=\"flex items-center text-sm text-muted-foreground\">\n        <Link to=\"/docs\" className=\"hover:text-foreground transition-colors\">\n          Documentation\n        </Link>\n        <ArrowRight className=\"h-4 w-4 mx-2\" />\n        <span>{title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DocBreadcrumb;\n","\nimport React from 'react';\nimport VersionSelector from './VersionSelector';\nimport { getVersionConfig } from '@/utils/docs/versions';\n\nconst DocHeader: React.FC = () => {\n  const config = getVersionConfig();\n  \n  return (\n    <div className=\"flex justify-between items-center mb-6\">\n      {config.enabled && ['header', 'both'].includes(config.selector.position) && (\n        <VersionSelector position=\"header\" />\n      )}\n    </div>\n  );\n};\n\nexport default DocHeader;\n","\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getNavigationLinks } from '@/utils/docs';\nimport { useSidebarStructure } from '@/utils/docs/sidebar';\nimport MarkdownRenderer from '@/components/docs/MarkdownRenderer';\nimport DocNavigation from '@/components/docs/DocNavigation';\nimport DocMetadata from '@/components/DocMetadata';\nimport DocBreadcrumb from '@/components/docs/DocBreadcrumb';\nimport DocHeader from '@/components/docs/DocHeader';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { loadMarkdownFile } from '@/utils/docs/loader';\nimport { \n  extractVersionFromPath, \n  getVersionConfig, \n  getCurrentVersion \n} from '@/utils/docs/versions';\n\nconst DocPage = () => {\n  const location = useLocation();\n  const [content, setContent] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const { sidebar } = useSidebarStructure();\n  const { getLocalizedPath } = useLanguage();\n  const versionConfig = getVersionConfig();\n\n  const path = location.pathname.replace(/^\\/docs\\//, '');\n  const { version } = extractVersionFromPath(location.pathname);\n  const currentVersion = version || getCurrentVersion().name;\n  \n  const { prev, next } = getNavigationLinks(location.pathname, sidebar);\n  \n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        setIsLoading(true);\n        const localizedPath = getLocalizedPath(path);\n        try {\n          // Use the versioned loader\n          const markdownContent = await loadMarkdownFile(localizedPath);\n          setContent(markdownContent);\n          setError(null);\n        } catch (localizedErr) {\n          const markdownContent = await loadMarkdownFile(path);\n          setContent(markdownContent);\n          setError(null);\n        }\n      } catch (err: any) {\n        console.error(\"Failed to load doc content:\", err);\n        setError(err);\n        setContent('');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchContent();\n  }, [path, getLocalizedPath, currentVersion]);\n  \n  return (\n    <div className=\"pb-16\">\n      <DocBreadcrumb path={location.pathname} />\n      \n      {/* Add version selector in header when enabled */}\n      {versionConfig.enabled && (\n        <DocHeader />\n      )}\n      \n      <div className=\"mt-6\">\n        {isLoading ? (\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-8 bg-muted rounded w-3/4\"></div>\n            <div className=\"h-4 bg-muted rounded w-1/2\"></div>\n            <div className=\"h-4 bg-muted rounded\"></div>\n            <div className=\"h-4 bg-muted rounded\"></div>\n          </div>\n        ) : error ? (\n          <div className=\"p-4 border border-red-200 bg-red-50 text-red-700 rounded-md\">\n            <h2 className=\"text-xl font-bold\">Error Loading Document</h2>\n            <p className=\"mt-2\">{error.message}</p>\n          </div>\n        ) : (\n          <>\n            <MarkdownRenderer content={content} />\n            <div className=\"mt-8\">\n              <DocMetadata markdown={content} githubPath={path} />\n            </div>\n          </>\n        )}\n      </div>\n      \n      <DocNavigation prev={prev} next={next} />\n    </div>\n  );\n};\n\nexport default DocPage;\n"],"names":["ArrowLeft","createLucideIcon","Calendar","getNavigationLinks","currentPath","sidebarStructure","allPages","section","item","currentIndex","page","prev","next","loadMarkdownFile","path","pathVersion","basePath","extractVersionFromPath","version","getCurrentVersion","isGlobalVersioning","content","originalLoadMarkdownFile","currentVersion","error","DocNavigation","jsxs","Link","jsx","ArrowRight","DocMetadata","markdown","githubPath","publishDate","extractPublishDate","docPath","getGitHubPath","repoUrl","Github","DocBreadcrumb","pathSegments","title","word","DocHeader","config","getVersionConfig","VersionSelector","DocPage","location","useLocation","setContent","useState","isLoading","setIsLoading","setError","sidebar","useSidebarStructure","getLocalizedPath","useLanguage","useEffect","localizedPath","markdownContent","err","Fragment","MarkdownRenderer"],"mappings":"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","x_google_ignoreList":[0,1]}