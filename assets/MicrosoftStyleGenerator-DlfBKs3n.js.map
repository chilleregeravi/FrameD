{"version":3,"file":"MicrosoftStyleGenerator-DlfBKs3n.js","sources":["../../node_modules/@radix-ui/react-separator/dist/index.mjs","../../src/components/ui/separator.tsx","../../src/components/ui/textarea.tsx","../../src/components/ui/card.tsx","../../src/tools/microsoft-style/InputCard.tsx","../../node_modules/@radix-ui/react-tabs/dist/index.mjs","../../src/components/ui/tabs.tsx","../../src/tools/microsoft-style/OutputCard.tsx","../../src/components/ui/badge.tsx","../../src/utils/microsoftStyleRules.ts","../../src/utils/microsoftStyleChecker.ts","../../src/utils/termBankUtils.ts","../../src/tools/microsoft-style/StyleTipsCard.tsx","../../src/tools/microsoft-style/StyleChecker.tsx","../../src/pages/MicrosoftStyleGenerator.tsx"],"sourcesContent":["// packages/react/separator/src/Separator.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Separator\";\nvar DEFAULT_ORIENTATION = \"horizontal\";\nvar ORIENTATIONS = [\"horizontal\", \"vertical\"];\nvar Separator = React.forwardRef((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  const ariaOrientation = orientation === \"vertical\" ? orientation : void 0;\n  const semanticProps = decorative ? { role: \"none\" } : { \"aria-orientation\": ariaOrientation, role: \"separator\" };\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-orientation\": orientation,\n      ...semanticProps,\n      ...domProps,\n      ref: forwardedRef\n    }\n  );\n});\nSeparator.displayName = NAME;\nfunction isValidOrientation(orientation) {\n  return ORIENTATIONS.includes(orientation);\n}\nvar Root = Separator;\nexport {\n  Root,\n  Separator\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","\nimport React from 'react';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { RefreshCw } from \"lucide-react\";\n\ninterface InputCardProps {\n  input: string;\n  setInput: (value: string) => void;\n  isGenerating: boolean;\n  onGenerate: () => void;\n}\n\nconst InputCard: React.FC<InputCardProps> = ({ \n  input, \n  setInput, \n  isGenerating, \n  onGenerate \n}) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Input Content</CardTitle>\n        <CardDescription>\n          Enter your original content below\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Textarea \n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter your technical documentation here. For example: 'It is necessary for users to install the software prior to configuration.'\"\n          className=\"min-h-[300px]\"\n        />\n      </CardContent>\n      <CardFooter>\n        <Button \n          onClick={onGenerate} \n          disabled={isGenerating || !input.trim()}\n          className=\"w-full\"\n        >\n          {isGenerating ? (\n            <>\n              <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n              Converting...\n            </>\n          ) : \"Convert to Microsoft Style\"}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default InputCard;\n","\"use client\";\n\n// packages/react/tabs/src/Tabs.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TABS_NAME = \"Tabs\";\nvar [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);\nvar Tabs = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = \"horizontal\",\n      dir,\n      activationMode = \"automatic\",\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue\n    });\n    return /* @__PURE__ */ jsx(\n      TabsProvider,\n      {\n        scope: __scopeTabs,\n        baseId: useId(),\n        value,\n        onValueChange: setValue,\n        orientation,\n        dir: direction,\n        activationMode,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            \"data-orientation\": orientation,\n            ...tabsProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabs.displayName = TABS_NAME;\nvar TAB_LIST_NAME = \"TabsList\";\nvar TabsList = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Root,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        orientation: context.orientation,\n        dir: context.dir,\n        loop,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            role: \"tablist\",\n            \"aria-orientation\": context.orientation,\n            ...listProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabsList.displayName = TAB_LIST_NAME;\nvar TRIGGER_NAME = \"TabsTrigger\";\nvar TabsTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !disabled,\n        active: isSelected,\n        children: /* @__PURE__ */ jsx(\n          Primitive.button,\n          {\n            type: \"button\",\n            role: \"tab\",\n            \"aria-selected\": isSelected,\n            \"aria-controls\": contentId,\n            \"data-state\": isSelected ? \"active\" : \"inactive\",\n            \"data-disabled\": disabled ? \"\" : void 0,\n            disabled,\n            id: triggerId,\n            ...triggerProps,\n            ref: forwardedRef,\n            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {\n              if (!disabled && event.button === 0 && event.ctrlKey === false) {\n                context.onValueChange(value);\n              } else {\n                event.preventDefault();\n              }\n            }),\n            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n              if ([\" \", \"Enter\"].includes(event.key)) context.onValueChange(value);\n            }),\n            onFocus: composeEventHandlers(props.onFocus, () => {\n              const isAutomaticActivation = context.activationMode !== \"manual\";\n              if (!isSelected && !disabled && isAutomaticActivation) {\n                context.onValueChange(value);\n              }\n            })\n          }\n        )\n      }\n    );\n  }\n);\nTabsTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"TabsContent\";\nvar TabsContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isSelected, children: ({ present }) => /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": isSelected ? \"active\" : \"inactive\",\n        \"data-orientation\": context.orientation,\n        role: \"tabpanel\",\n        \"aria-labelledby\": triggerId,\n        hidden: !present,\n        id: contentId,\n        tabIndex: 0,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          ...props.style,\n          animationDuration: isMountAnimationPreventedRef.current ? \"0s\" : void 0\n        },\n        children: present && children\n      }\n    ) });\n  }\n);\nTabsContent.displayName = CONTENT_NAME;\nfunction makeTriggerId(baseId, value) {\n  return `${baseId}-trigger-${value}`;\n}\nfunction makeContentId(baseId, value) {\n  return `${baseId}-content-${value}`;\n}\nvar Root2 = Tabs;\nvar List = TabsList;\nvar Trigger = TabsTrigger;\nvar Content = TabsContent;\nexport {\n  Content,\n  List,\n  Root2 as Root,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  Trigger,\n  createTabsScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","\nimport React, { useState } from 'react';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Check, Copy } from \"lucide-react\";\nimport MarkdownRenderer from \"@/components/docs/MarkdownRenderer\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface OutputCardProps {\n  generatedContent: string;\n}\n\nconst OutputCard: React.FC<OutputCardProps> = ({ generatedContent }) => {\n  const [copied, setCopied] = useState(false);\n  const { toast } = useToast();\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generatedContent);\n    setCopied(true);\n    \n    toast({\n      title: \"Copied to clipboard\",\n      description: \"The generated content has been copied to your clipboard.\"\n    });\n    \n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Generated Content</CardTitle>\n        <CardDescription>\n          Microsoft Style Guide compliant output\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs defaultValue=\"preview\">\n          <TabsList className=\"mb-4\">\n            <TabsTrigger value=\"preview\">Preview</TabsTrigger>\n            <TabsTrigger value=\"markdown\">Markdown</TabsTrigger>\n          </TabsList>\n          \n          <TabsContent value=\"preview\" className=\"min-h-[300px] border rounded-md p-4\">\n            {generatedContent ? (\n              <MarkdownRenderer content={generatedContent} />\n            ) : (\n              <div className=\"text-muted-foreground text-center h-full flex items-center justify-center\">\n                Generated content will appear here\n              </div>\n            )}\n          </TabsContent>\n          \n          <TabsContent value=\"markdown\" className=\"min-h-[300px]\">\n            {generatedContent ? (\n              <Textarea \n                value={generatedContent}\n                readOnly\n                className=\"min-h-[300px] font-mono text-sm\"\n              />\n            ) : (\n              <div className=\"text-muted-foreground text-center h-full flex items-center justify-center border rounded-md p-4\">\n                Generated markdown will appear here\n              </div>\n            )}\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n      <CardFooter>\n        <Button \n          onClick={copyToClipboard} \n          disabled={!generatedContent} \n          variant=\"outline\" \n          className=\"w-full\"\n        >\n          {copied ? (\n            <>\n              <Check className=\"mr-2 h-4 w-4\" />\n              Copied!\n            </>\n          ) : (\n            <>\n              <Copy className=\"mr-2 h-4 w-4\" />\n              Copy to Clipboard\n            </>\n          )}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default OutputCard;\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","\n// Define style rules data structures\nexport const passiveVoicePatterns = [\n  \"is being\",\n  \"was\",\n  \"were\",\n  \"has been\",\n  \"have been\",\n  \"had been\",\n  \"will be\",\n  \"being\",\n  \"is used to\",\n  \"are required to\",\n  \"is done\",\n  \"are provided\"\n];\n\nexport const wordPairs = [\n  { avoid: \"utilize\", use: \"use\", type: \"grammar\" as const },\n  { avoid: \"functionality\", use: \"features\", type: \"grammar\" as const },\n  { avoid: \"leverage\", use: \"use\", type: \"grammar\" as const },\n  { avoid: \"in order to\", use: \"to\", type: \"grammar\" as const },\n  { avoid: \"ensure\", use: \"make sure\", type: \"grammar\" as const },\n  { avoid: \"employ\", use: \"use\", type: \"grammar\" as const },\n  { avoid: \"assistance\", use: \"help\", type: \"grammar\" as const },\n  { avoid: \"initiate\", use: \"start\", type: \"grammar\" as const }\n];\n\nexport const formalPhrases = [\n  { phrase: \"please note\", suggestion: \"Remove 'please note' and state the information directly\", type: \"voice\" as const },\n  { phrase: \"it is recommended\", suggestion: \"We recommend\", type: \"voice\" as const },\n  { phrase: \"it is important to\", suggestion: \"You need to\", type: \"voice\" as const },\n  { phrase: \"it should be noted\", suggestion: \"Note that\", type: \"voice\" as const },\n  { phrase: \"please be advised\", suggestion: \"Remove this phrase entirely\", type: \"voice\" as const },\n  { phrase: \"click on\", suggestion: \"select\", type: \"verb\" as const },\n  { phrase: \"tap on\", suggestion: \"select\", type: \"verb\" as const }\n];\n\n/**\n * Transform text to follow Microsoft Style Guide rules\n * \n * @param text Input text to transform\n * @returns Text following Microsoft style guidelines\n */\nexport const transformToMicrosoftStyle = (text: string): string => {\n  let result = text;\n  \n  // Apply word pair replacements\n  wordPairs.forEach(({ avoid, use }) => {\n    const regex = new RegExp(`\\\\b${avoid}\\\\b`, 'gi');\n    result = result.replace(regex, use);\n  });\n  \n  // Transform passive voice to active voice when possible\n  // This is a simplified approach - a complete solution would need NLP\n  passiveVoicePatterns.forEach(pattern => {\n    // Look for common passive voice patterns and try to convert them\n    // This is a basic implementation that won't catch all cases\n    const regex = new RegExp(`\\\\b${pattern}\\\\b`, 'gi');\n    result = result.replace(regex, (match) => {\n      // For simplicity, we're just adding a comment about passive voice\n      return match + \" [consider using active voice]\";\n    });\n  });\n  \n  // Replace formal phrases with more direct alternatives\n  formalPhrases.forEach(({ phrase, suggestion }) => {\n    if (suggestion.startsWith(\"Remove\")) {\n      // If the suggestion is to remove the phrase entirely\n      const regex = new RegExp(`\\\\b${phrase}\\\\b`, 'gi');\n      result = result.replace(regex, '');\n    } else {\n      // Replace with the suggested alternative\n      const regex = new RegExp(`\\\\b${phrase}\\\\b`, 'gi');\n      result = result.replace(regex, suggestion);\n    }\n  });\n  \n  return result;\n};\n","\nimport { passiveVoicePatterns, wordPairs, formalPhrases } from './microsoftStyleRules';\n\n// Define types for style checking\nexport interface StyleViolation {\n  type: 'voice' | 'grammar' | 'verb' | 'other';\n  pattern: string;\n  suggestion: string;\n  line: number;\n  context: string;\n}\n\ninterface StyleCheckResult {\n  violations: StyleViolation[];\n  score: number;\n}\n\nexport const checkMicrosoftStyle = (text: string, fileName?: string): StyleCheckResult => {\n  const violations: StyleViolation[] = [];\n  const lines = text.split('\\n');\n  \n  // Check for passive voice patterns\n  passiveVoicePatterns.forEach(pattern => {\n    lines.forEach((line, lineNumber) => {\n      if (line.toLowerCase().includes(pattern.toLowerCase())) {\n        violations.push({\n          type: 'voice',\n          pattern: pattern,\n          suggestion: \"Use active voice instead of passive voice\",\n          line: lineNumber + 1,\n          context: line\n        });\n      }\n    });\n  });\n  \n  // Check for word pair replacements (e.g., \"utilize\" -> \"use\")\n  wordPairs.forEach(({ avoid, use, type }) => {\n    const regex = new RegExp(`\\\\b${avoid}\\\\b`, 'gi');\n    \n    lines.forEach((line, lineNumber) => {\n      if (regex.test(line)) {\n        violations.push({\n          type: type,\n          pattern: avoid,\n          suggestion: `Use \"${use}\" instead of \"${avoid}\"`,\n          line: lineNumber + 1,\n          context: line\n        });\n      }\n    });\n  });\n  \n  // Check for overly formal phrases\n  formalPhrases.forEach(({ phrase, suggestion, type }) => {\n    const regex = new RegExp(`\\\\b${phrase}\\\\b`, 'gi');\n    \n    lines.forEach((line, lineNumber) => {\n      if (regex.test(line)) {\n        violations.push({\n          type: type,\n          pattern: phrase,\n          suggestion: suggestion,\n          line: lineNumber + 1,\n          context: line\n        });\n      }\n    });\n  });\n  \n  // Calculate score\n  const score = Math.max(0, 100 - (violations.length * 5));\n  \n  return { violations, score };\n};\n\n// Calculate overall Microsoft style score\nexport const calculateStyleScore = (text: string): number => {\n  const result = checkMicrosoftStyle(text);\n  return result.score;\n};\n","\n// Approved terms from the term bank\nexport const approvedTerms: Record<string, string> = {\n  'select': 'click, tap, press',\n  'configuration': 'config, setup',\n  'documentation': 'docs, papers',\n  'validate': 'check, verify',\n  'style guide': 'style rules, guidelines',\n  'Microsoft style': 'MS style',\n  'GitHub Actions': 'GH Actions, Actions',\n  // Technical terms\n  'Markdown': 'markup',\n  'frontmatter': 'YAML header, metadata',\n  'CI/CD': 'pipeline',\n  'linting': 'checking',\n  'validator': 'checker'\n};\n\n/**\n * Validates all terms in content against the approved term bank\n */\nexport const validateTerms = (content: string): { violations: string[], score: number } => {\n  const violations: string[] = [];\n  \n  Object.entries(approvedTerms).forEach(([preferred, avoid]) => {\n    const avoidTerms = avoid.split(',').map(term => term.trim());\n    \n    avoidTerms.forEach(term => {\n      const regex = new RegExp(`\\\\b${term}\\\\b`, 'gi');\n      if (regex.test(content)) {\n        violations.push(`Use \"${preferred}\" instead of \"${term}\"`);\n      }\n    });\n  });\n  \n  // Calculate compliance score\n  const score = violations.length === 0 ? 100 : Math.max(0, 100 - violations.length * 5);\n  \n  return {\n    violations,\n    score\n  };\n};\n\n/**\n * Checks acronyms to ensure they are defined on first use\n */\nexport const checkAcronyms = (content: string): { violations: string[] } => {\n  const acronyms = [\n    { acronym: 'CI/CD', fullForm: 'Continuous Integration/Continuous Deployment' },\n    { acronym: 'API', fullForm: 'Application Programming Interface' },\n    { acronym: 'UI', fullForm: 'User Interface' },\n    { acronym: 'CLI', fullForm: 'Command Line Interface' },\n    { acronym: 'PR', fullForm: 'Pull Request' }\n  ];\n  \n  const violations: string[] = [];\n  \n  acronyms.forEach(({ acronym, fullForm }) => {\n    // Check if acronym is used\n    const acronymRegex = new RegExp(`\\\\b${acronym}\\\\b`, 'g');\n    if (acronymRegex.test(content)) {\n      // Check if the full form is defined before using the acronym\n      const fullFormRegex = new RegExp(`${fullForm}\\\\s+\\\\(${acronym}\\\\)`, 'i');\n      if (!fullFormRegex.test(content)) {\n        violations.push(`Acronym \"${acronym}\" is used without defining its full form \"${fullForm}\" on first use.`);\n      }\n    }\n  });\n  \n  return {\n    violations\n  };\n};\n\n/**\n * Applies term bank standardization to content\n */\nexport const standardizeTerms = (content: string): string => {\n  let standardizedContent = content;\n  \n  Object.entries(approvedTerms).forEach(([preferred, avoid]) => {\n    const avoidTerms = avoid.split(',').map(term => term.trim());\n    \n    avoidTerms.forEach(term => {\n      const regex = new RegExp(`\\\\b${term}\\\\b`, 'gi');\n      standardizedContent = standardizedContent.replace(regex, preferred);\n    });\n  });\n  \n  return standardizedContent;\n};\n\n","\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\nconst StyleTipsCard: React.FC = () => {\n  return (\n    <Card className=\"mt-8\">\n      <CardHeader>\n        <CardTitle>Microsoft Style Tips</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <h3 className=\"font-medium mb-2\">Core Principles</h3>\n            <ul className=\"list-disc list-inside space-y-1\">\n              <li>Use active voice, not passive</li>\n              <li>Address the reader directly using \"you\"</li>\n              <li>Be concise and conversational</li>\n              <li>Use sentence-style capitalization in headings</li>\n              <li>Avoid using \"please\" in instructions</li>\n            </ul>\n          </div>\n          <div>\n            <h3 className=\"font-medium mb-2\">Common Transformations</h3>\n            <div className=\"space-y-2\">\n              <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                <div className=\"font-medium\">Instead of</div>\n                <div className=\"font-medium\">Use</div>\n                <div className=\"text-red-500\">It is necessary to configure...</div>\n                <div className=\"text-green-500\">You need to configure...</div>\n                <div className=\"text-red-500\">Users should be aware...</div>\n                <div className=\"text-green-500\">You should be aware...</div>\n                <div className=\"text-red-500\">Click on the button</div>\n                <div className=\"text-green-500\">Select the button</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default StyleTipsCard;\n","\nimport React, { useState } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { checkMicrosoftStyle, StyleViolation } from '../../utils/microsoftStyleChecker';\nimport { validateTerms, checkAcronyms, standardizeTerms } from '../../utils/termBankUtils';\nimport StyleTipsCard from './StyleTipsCard';\n\nconst StyleChecker: React.FC = () => {\n  const [text, setText] = useState('');\n  const [results, setResults] = useState<{\n    styleViolations: StyleViolation[],\n    termViolations: string[],\n    acronymViolations: string[],\n    styleScore: number,\n    termScore: number,\n    improvedText: string\n  } | null>(null);\n\n  const handleCheck = () => {\n    if (!text.trim()) return;\n\n    // Run Microsoft style check\n    const styleResult = checkMicrosoftStyle(text);\n    \n    // Run term bank check\n    const termResult = validateTerms(text);\n    \n    // Run acronym check\n    const acronymResult = checkAcronyms(text);\n    \n    // Get improved text\n    const improvedText = standardizeTerms(text);\n    \n    setResults({\n      styleViolations: styleResult.violations,\n      termViolations: termResult.violations,\n      acronymViolations: acronymResult.violations,\n      styleScore: styleResult.score,\n      termScore: termResult.score,\n      improvedText\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Microsoft Style Checker</CardTitle>\n          <CardDescription>\n            Enter your text below to check for compliance with the Microsoft Manual of Style\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Textarea\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter your documentation text here...\"\n            rows={10}\n            className=\"w-full font-mono text-sm\"\n          />\n        </CardContent>\n        <CardFooter>\n          <Button onClick={handleCheck} disabled={!text.trim()}>\n            Check Style\n          </Button>\n        </CardFooter>\n      </Card>\n\n      {results && (\n        <>\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                Results\n                <div className=\"flex gap-2\">\n                  <Badge variant={results.styleScore >= 90 ? \"default\" : results.styleScore >= 70 ? \"secondary\" : \"destructive\"}>\n                    Style: {results.styleScore}/100\n                  </Badge>\n                  <Badge variant={results.termScore >= 90 ? \"default\" : results.termScore >= 70 ? \"secondary\" : \"destructive\"}>\n                    Terminology: {results.termScore}/100\n                  </Badge>\n                </div>\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {results.styleViolations.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-medium mb-2\">Style Violations ({results.styleViolations.length})</h3>\n                  <ul className=\"list-disc list-inside space-y-2\">\n                    {results.styleViolations.map((violation, index) => (\n                      <li key={index} className=\"text-sm\">\n                        <span className=\"font-medium\">{violation.pattern}</span>\n                        <div className=\"ml-6 mt-1\">\n                          <span className=\"text-red-500\">Found in: \"{violation.context}\"</span>\n                          <br />\n                          <span className=\"text-green-500\">Suggestion: \"{violation.suggestion}\"</span>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              {results.termViolations.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-medium mb-2\">Term Bank Violations ({results.termViolations.length})</h3>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    {results.termViolations.map((violation, index) => (\n                      <li key={index} className=\"text-sm\">{violation}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              {results.acronymViolations.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-medium mb-2\">Acronym Violations ({results.acronymViolations.length})</h3>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    {results.acronymViolations.map((violation, index) => (\n                      <li key={index} className=\"text-sm\">{violation}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              {results.styleViolations.length === 0 && \n               results.termViolations.length === 0 && \n               results.acronymViolations.length === 0 && (\n                <div className=\"text-center py-4\">\n                  <p className=\"text-green-500 font-medium\">No violations found! Your text follows Microsoft style guidelines.</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {(results.styleViolations.length > 0 || results.termViolations.length > 0) && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Improved Text</CardTitle>\n                <CardDescription>Here's your text with style improvements applied:</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Textarea\n                  value={results.improvedText}\n                  readOnly\n                  rows={10}\n                  className=\"w-full font-mono text-sm\"\n                />\n              </CardContent>\n              <CardFooter>\n                <Button variant=\"outline\" onClick={() => setText(results.improvedText)}>\n                  Use Improved Text\n                </Button>\n              </CardFooter>\n            </Card>\n          )}\n        </>\n      )}\n\n      <StyleTipsCard />\n    </div>\n  );\n};\n\nexport default StyleChecker;\n","\nimport React, { useState } from 'react';\nimport PageTransition from '@/components/PageTransition';\nimport { Separator } from '@/components/ui/separator';\nimport InputCard from '@/tools/microsoft-style/InputCard';\nimport OutputCard from '@/tools/microsoft-style/OutputCard';\nimport StyleChecker from '@/tools/microsoft-style/StyleChecker';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { transformToMicrosoftStyle } from '@/utils/microsoftStyleRules';\n\nconst MicrosoftStyleGenerator: React.FC = () => {\n  const [input, setInput] = useState('');\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  const handleGenerate = () => {\n    setIsGenerating(true);\n    \n    // Use the transformToMicrosoftStyle function to convert the input\n    try {\n      const transformed = transformToMicrosoftStyle(input);\n      setGeneratedContent(transformed);\n    } catch (error) {\n      console.error(\"Error transforming text:\", error);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  return (\n    <PageTransition>\n      <div className=\"container mx-auto py-8 px-4 md:px-6 lg:px-8\">\n        <h1 className=\"text-4xl font-bold tracking-tight mb-4\">Microsoft Style Generator</h1>\n        <p className=\"text-lg text-muted-foreground mb-8\">\n          Convert your documentation to Microsoft style or check your content against style guidelines\n        </p>\n        \n        <Tabs defaultValue=\"generator\" className=\"w-full\">\n          <TabsList className=\"grid w-full max-w-md grid-cols-2\">\n            <TabsTrigger value=\"generator\">Generator</TabsTrigger>\n            <TabsTrigger value=\"checker\">Style Checker</TabsTrigger>\n          </TabsList>\n          \n          <TabsContent value=\"generator\" className=\"mt-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <InputCard \n                input={input}\n                setInput={setInput}\n                isGenerating={isGenerating}\n                onGenerate={handleGenerate}\n              />\n              <OutputCard generatedContent={generatedContent} />\n            </div>\n          </TabsContent>\n          \n          <TabsContent value=\"checker\" className=\"mt-6\">\n            <StyleChecker />\n          </TabsContent>\n        </Tabs>\n        \n        <Separator className=\"my-10\" />\n        \n        <div className=\"prose prose-blue dark:prose-invert max-w-none\">\n          <h2>About Microsoft Style</h2>\n          <p>\n            The Microsoft Style Guide provides guidelines for content creation that's clear, \n            concise, and consistent. Our Microsoft Style Generator helps you transform your \n            documentation to follow these guidelines automatically.\n          </p>\n          \n          <h3>Key Microsoft Style Principles</h3>\n          <ul>\n            <li>\n              <strong>Use active voice:</strong> Active voice makes your writing clearer and more direct.\n            </li>\n            <li>\n              <strong>Address the reader directly:</strong> Use \"you\" instead of \"users\" or \"they.\"\n            </li>\n            <li>\n              <strong>Be concise:</strong> Use simple words and phrases instead of complex ones.\n            </li>\n            <li>\n              <strong>Use sentence-style capitalization:</strong> Only capitalize the first word and proper nouns in headings.\n            </li>\n            <li>\n              <strong>Avoid jargon:</strong> Use plain language that's easy to understand.\n            </li>\n          </ul>\n          \n          <p>\n            For more information, visit our <a href=\"/docs/style-guide/microsoft-style\">Microsoft Style Guide</a> or \n            consult the <a href=\"https://learn.microsoft.com/style-guide/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            official Microsoft Style Guide</a>.\n          </p>\n        </div>\n      </div>\n    </PageTransition>\n  );\n};\n\nexport default MicrosoftStyleGenerator;\n"],"names":["NAME","DEFAULT_ORIENTATION","ORIENTATIONS","Separator","React.forwardRef","props","forwardedRef","decorative","orientationProp","domProps","orientation","isValidOrientation","semanticProps","jsx","Primitive","Root","className","ref","SeparatorPrimitive.Root","cn","Textarea","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","InputCard","input","setInput","isGenerating","onGenerate","jsxs","e","Button","Fragment","RefreshCw","TABS_NAME","createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","__scopeTabs","valueProp","onValueChange","defaultValue","dir","activationMode","tabsProps","direction","useDirection","value","setValue","useControllableState","useId","TAB_LIST_NAME","TabsList","loop","listProps","context","rovingFocusGroupScope","RovingFocusGroup.Root","TRIGGER_NAME","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","RovingFocusGroup.Item","composeEventHandlers","event","isAutomaticActivation","CONTENT_NAME","TabsContent","forceMount","children","contentProps","isMountAnimationPreventedRef","React.useRef","React.useEffect","rAF","Presence","present","baseId","Root2","List","Trigger","Content","TabsPrimitive.Root","TabsPrimitive.List","TabsPrimitive.Trigger","TabsPrimitive.Content","OutputCard","generatedContent","copied","setCopied","useState","toast","useToast","copyToClipboard","MarkdownRenderer","Check","Copy","badgeVariants","cva","Badge","variant","passiveVoicePatterns","wordPairs","formalPhrases","transformToMicrosoftStyle","text","result","avoid","use","regex","pattern","match","phrase","suggestion","checkMicrosoftStyle","fileName","violations","lines","line","lineNumber","type","score","approvedTerms","validateTerms","content","preferred","term","checkAcronyms","acronyms","acronym","fullForm","standardizeTerms","standardizedContent","StyleTipsCard","StyleChecker","setText","results","setResults","handleCheck","styleResult","termResult","acronymResult","improvedText","violation","index","MicrosoftStyleGenerator","setGeneratedContent","setIsGenerating","handleGenerate","transformed","error","PageTransition"],"mappings":"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","x_google_ignoreList":[0,5]}