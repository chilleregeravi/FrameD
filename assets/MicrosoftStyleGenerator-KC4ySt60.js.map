{"version":3,"file":"MicrosoftStyleGenerator-KC4ySt60.js","sources":["../../src/components/ui/textarea.tsx","../../src/components/ui/card.tsx","../../src/components/microsoft-style/InputCard.tsx","../../node_modules/@radix-ui/react-tabs/dist/index.mjs","../../src/components/ui/tabs.tsx","../../src/components/microsoft-style/OutputCard.tsx","../../src/components/microsoft-style/StyleTipsCard.tsx","../../src/utils/microsoftStyleRules.ts","../../src/pages/MicrosoftStyleGenerator.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","\nimport React from 'react';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { RefreshCw } from \"lucide-react\";\n\ninterface InputCardProps {\n  input: string;\n  setInput: (value: string) => void;\n  isGenerating: boolean;\n  onGenerate: () => void;\n}\n\nconst InputCard: React.FC<InputCardProps> = ({ \n  input, \n  setInput, \n  isGenerating, \n  onGenerate \n}) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Input Content</CardTitle>\n        <CardDescription>\n          Enter your original content below\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Textarea \n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter your technical documentation here. For example: 'It is necessary for users to install the software prior to configuration.'\"\n          className=\"min-h-[300px]\"\n        />\n      </CardContent>\n      <CardFooter>\n        <Button \n          onClick={onGenerate} \n          disabled={isGenerating || !input.trim()}\n          className=\"w-full\"\n        >\n          {isGenerating ? (\n            <>\n              <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n              Converting...\n            </>\n          ) : \"Convert to Microsoft Style\"}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default InputCard;\n","\"use client\";\n\n// packages/react/tabs/src/Tabs.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TABS_NAME = \"Tabs\";\nvar [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);\nvar Tabs = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = \"horizontal\",\n      dir,\n      activationMode = \"automatic\",\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue\n    });\n    return /* @__PURE__ */ jsx(\n      TabsProvider,\n      {\n        scope: __scopeTabs,\n        baseId: useId(),\n        value,\n        onValueChange: setValue,\n        orientation,\n        dir: direction,\n        activationMode,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            \"data-orientation\": orientation,\n            ...tabsProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabs.displayName = TABS_NAME;\nvar TAB_LIST_NAME = \"TabsList\";\nvar TabsList = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Root,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        orientation: context.orientation,\n        dir: context.dir,\n        loop,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            role: \"tablist\",\n            \"aria-orientation\": context.orientation,\n            ...listProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabsList.displayName = TAB_LIST_NAME;\nvar TRIGGER_NAME = \"TabsTrigger\";\nvar TabsTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !disabled,\n        active: isSelected,\n        children: /* @__PURE__ */ jsx(\n          Primitive.button,\n          {\n            type: \"button\",\n            role: \"tab\",\n            \"aria-selected\": isSelected,\n            \"aria-controls\": contentId,\n            \"data-state\": isSelected ? \"active\" : \"inactive\",\n            \"data-disabled\": disabled ? \"\" : void 0,\n            disabled,\n            id: triggerId,\n            ...triggerProps,\n            ref: forwardedRef,\n            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {\n              if (!disabled && event.button === 0 && event.ctrlKey === false) {\n                context.onValueChange(value);\n              } else {\n                event.preventDefault();\n              }\n            }),\n            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n              if ([\" \", \"Enter\"].includes(event.key)) context.onValueChange(value);\n            }),\n            onFocus: composeEventHandlers(props.onFocus, () => {\n              const isAutomaticActivation = context.activationMode !== \"manual\";\n              if (!isSelected && !disabled && isAutomaticActivation) {\n                context.onValueChange(value);\n              }\n            })\n          }\n        )\n      }\n    );\n  }\n);\nTabsTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"TabsContent\";\nvar TabsContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isSelected, children: ({ present }) => /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": isSelected ? \"active\" : \"inactive\",\n        \"data-orientation\": context.orientation,\n        role: \"tabpanel\",\n        \"aria-labelledby\": triggerId,\n        hidden: !present,\n        id: contentId,\n        tabIndex: 0,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          ...props.style,\n          animationDuration: isMountAnimationPreventedRef.current ? \"0s\" : void 0\n        },\n        children: present && children\n      }\n    ) });\n  }\n);\nTabsContent.displayName = CONTENT_NAME;\nfunction makeTriggerId(baseId, value) {\n  return `${baseId}-trigger-${value}`;\n}\nfunction makeContentId(baseId, value) {\n  return `${baseId}-content-${value}`;\n}\nvar Root2 = Tabs;\nvar List = TabsList;\nvar Trigger = TabsTrigger;\nvar Content = TabsContent;\nexport {\n  Content,\n  List,\n  Root2 as Root,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  Trigger,\n  createTabsScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","\nimport React, { useState } from 'react';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Check, Copy } from \"lucide-react\";\nimport MarkdownRenderer from \"@/components/docs/MarkdownRenderer\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface OutputCardProps {\n  generatedContent: string;\n}\n\nconst OutputCard: React.FC<OutputCardProps> = ({ generatedContent }) => {\n  const [copied, setCopied] = useState(false);\n  const { toast } = useToast();\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generatedContent);\n    setCopied(true);\n    \n    toast({\n      title: \"Copied to clipboard\",\n      description: \"The generated content has been copied to your clipboard.\"\n    });\n    \n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Generated Content</CardTitle>\n        <CardDescription>\n          Microsoft Style Guide compliant output\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs defaultValue=\"preview\">\n          <TabsList className=\"mb-4\">\n            <TabsTrigger value=\"preview\">Preview</TabsTrigger>\n            <TabsTrigger value=\"markdown\">Markdown</TabsTrigger>\n          </TabsList>\n          \n          <TabsContent value=\"preview\" className=\"min-h-[300px] border rounded-md p-4\">\n            {generatedContent ? (\n              <MarkdownRenderer content={generatedContent} />\n            ) : (\n              <div className=\"text-muted-foreground text-center h-full flex items-center justify-center\">\n                Generated content will appear here\n              </div>\n            )}\n          </TabsContent>\n          \n          <TabsContent value=\"markdown\" className=\"min-h-[300px]\">\n            {generatedContent ? (\n              <Textarea \n                value={generatedContent}\n                readOnly\n                className=\"min-h-[300px] font-mono text-sm\"\n              />\n            ) : (\n              <div className=\"text-muted-foreground text-center h-full flex items-center justify-center border rounded-md p-4\">\n                Generated markdown will appear here\n              </div>\n            )}\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n      <CardFooter>\n        <Button \n          onClick={copyToClipboard} \n          disabled={!generatedContent} \n          variant=\"outline\" \n          className=\"w-full\"\n        >\n          {copied ? (\n            <>\n              <Check className=\"mr-2 h-4 w-4\" />\n              Copied!\n            </>\n          ) : (\n            <>\n              <Copy className=\"mr-2 h-4 w-4\" />\n              Copy to Clipboard\n            </>\n          )}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default OutputCard;\n","\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\nconst StyleTipsCard: React.FC = () => {\n  return (\n    <Card className=\"mt-8\">\n      <CardHeader>\n        <CardTitle>Microsoft Style Tips</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <h3 className=\"font-medium mb-2\">Core Principles</h3>\n            <ul className=\"list-disc list-inside space-y-1\">\n              <li>Use active voice, not passive</li>\n              <li>Address the reader directly using \"you\"</li>\n              <li>Be concise and conversational</li>\n              <li>Use sentence-style capitalization in headings</li>\n              <li>Avoid using \"please\" in instructions</li>\n            </ul>\n          </div>\n          <div>\n            <h3 className=\"font-medium mb-2\">Common Transformations</h3>\n            <div className=\"space-y-2\">\n              <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                <div className=\"font-medium\">Instead of</div>\n                <div className=\"font-medium\">Use</div>\n                <div className=\"text-red-500\">It is necessary to configure...</div>\n                <div className=\"text-green-500\">You need to configure...</div>\n                <div className=\"text-red-500\">Users should be aware...</div>\n                <div className=\"text-green-500\">You should be aware...</div>\n                <div className=\"text-red-500\">Click on the button</div>\n                <div className=\"text-green-500\">Select the button</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default StyleTipsCard;\n","\n// Microsoft style guidelines\nexport const styleRules = [\n  { type: 'voice', original: 'It is necessary to', replacement: 'You need to' },\n  { type: 'voice', original: 'Users should', replacement: 'You should' },\n  { type: 'voice', original: 'Please ', replacement: '' },\n  { type: 'voice', original: 'We recommend', replacement: 'We recommend that you' },\n  { type: 'voice', original: 'It is recommended', replacement: 'We recommend' },\n  { type: 'grammar', original: 'in order to', replacement: 'to' },\n  { type: 'grammar', original: 'utilize', replacement: 'use' },\n  { type: 'grammar', original: 'functionality', replacement: 'features' },\n  { type: 'grammar', original: 'leverage', replacement: 'use' },\n  { type: 'verb', original: 'Click on', replacement: 'Select' },\n  { type: 'verb', original: 'Tap on', replacement: 'Select' },\n];\n\n// Convert text to Microsoft style\nexport const transformToMicrosoftStyle = (input: string): string => {\n  if (!input.trim()) return '';\n  \n  let processedText = input;\n  \n  // Apply style rules\n  styleRules.forEach(rule => {\n    const regex = new RegExp(rule.original, 'gi');\n    processedText = processedText.replace(regex, rule.replacement);\n  });\n  \n  // Convert passive voice patterns to active voice (simplified example)\n  processedText = processedText.replace(/is being ([a-z]+ed)/gi, 'we are $1ing');\n  processedText = processedText.replace(/was ([a-z]+ed)/gi, 'you $1');\n  processedText = processedText.replace(/will be ([a-z]+ed)/gi, 'will $1');\n  \n  // Format procedures and lists\n  const lines = processedText.split('\\n');\n  const processedLines = lines.map(line => {\n    // Convert bullet points to numbered steps if they start with action verbs\n    if (line.trim().startsWith('- ') || line.trim().startsWith('* ')) {\n      const content = line.trim().substring(2);\n      // Check if it starts with an action verb (simplified check)\n      const firstWord = content.split(' ')[0];\n      if (firstWord.endsWith('ing')) {\n        // Convert to imperative form\n        const imperative = firstWord.substring(0, firstWord.length - 3);\n        return `1. ${imperative}${content.substring(firstWord.length)}`;\n      }\n    }\n    return line;\n  });\n  \n  return processedLines.join('\\n');\n};\n","\nimport React, { useState } from 'react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport InputCard from \"@/components/microsoft-style/InputCard\";\nimport OutputCard from \"@/components/microsoft-style/OutputCard\";\nimport StyleTipsCard from \"@/components/microsoft-style/StyleTipsCard\";\nimport { transformToMicrosoftStyle } from \"@/utils/microsoftStyleRules\";\n\nconst MicrosoftStyleGenerator = () => {\n  const [input, setInput] = useState('');\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const { toast } = useToast();\n\n  // Generate content in Microsoft style\n  const generateContent = () => {\n    if (!input.trim()) {\n      toast({\n        title: \"Empty input\",\n        description: \"Please enter some content to convert to Microsoft style.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsGenerating(true);\n    \n    // Simulate processing time (in a real app, this might be an API call)\n    setTimeout(() => {\n      const processedText = transformToMicrosoftStyle(input);\n      setGeneratedContent(processedText);\n      setIsGenerating(false);\n      \n      toast({\n        title: \"Content generated\",\n        description: \"Your content has been converted to Microsoft style.\"\n      });\n    }, 1500);\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"container py-8 pt-24 min-h-screen\">\n        <h1 className=\"text-3xl font-bold mb-6\">Microsoft Style Guide Content Generator</h1>\n        <p className=\"text-muted-foreground mb-8\">\n          Convert your documentation to follow the Microsoft Manual of Style guidelines.\n          This tool applies Microsoft's recommended voice, tone, and formatting to your content.\n        </p>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          <InputCard \n            input={input}\n            setInput={setInput}\n            isGenerating={isGenerating}\n            onGenerate={generateContent}\n          />\n          \n          <OutputCard generatedContent={generatedContent} />\n        </div>\n        \n        <StyleTipsCard />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default MicrosoftStyleGenerator;\n"],"names":["Textarea","React.forwardRef","className","props","ref","jsx","cn","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","InputCard","input","setInput","isGenerating","onGenerate","jsxs","e","Button","Fragment","RefreshCw","TABS_NAME","createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","forwardedRef","__scopeTabs","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","direction","useDirection","value","setValue","useControllableState","useId","Primitive","TAB_LIST_NAME","TabsList","loop","listProps","context","rovingFocusGroupScope","RovingFocusGroup.Root","TRIGGER_NAME","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","RovingFocusGroup.Item","composeEventHandlers","event","isAutomaticActivation","CONTENT_NAME","TabsContent","forceMount","children","contentProps","isMountAnimationPreventedRef","React.useRef","React.useEffect","rAF","Presence","present","baseId","Root2","List","Trigger","Content","TabsPrimitive.Root","TabsPrimitive.List","TabsPrimitive.Trigger","TabsPrimitive.Content","OutputCard","generatedContent","copied","setCopied","useState","toast","useToast","copyToClipboard","MarkdownRenderer","Check","Copy","StyleTipsCard","styleRules","transformToMicrosoftStyle","processedText","rule","regex","line","content","firstWord","MicrosoftStyleGenerator","setGeneratedContent","setIsGenerating","generateContent","Header","Footer"],"mappings":"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","x_google_ignoreList":[3]}