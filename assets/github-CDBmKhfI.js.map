{"version":3,"file":"github-CDBmKhfI.js","sources":["../../src/docs/getting-started/configuration/github.md?raw"],"sourcesContent":["export default \"\\n---\\ndate: 2023-08-15\\norder: 4\\nicon: github\\ndescription: \\\"Configure GitHub integration for your documentation\\\"\\ntitle: \\\"GitHub Integration\\\"\\n---\\n\\n# GitHub Integration\\n\\nFrameD seamlessly integrates with GitHub to enhance your documentation workflow. This page covers all GitHub integration options.\\n\\n## Basic GitHub Configuration\\n\\nConnect your documentation to your GitHub repository:\\n\\n```javascript\\nmodule.exports = {\\n  github: {\\n    repo: 'username/repo',        // GitHub repository\\n    branch: 'main',               // Branch name\\n    editUrl: true,                // Show \\\"Edit this page\\\" links\\n  },\\n};\\n```\\n\\n## Detailed GitHub Options\\n\\n| Option | Type | Default | Description |\\n|--------|------|---------|-------------|\\n| `repo` | string | null | GitHub repository name (username/repo) |\\n| `branch` | string | 'main' | Default branch name |\\n| `editUrl` | boolean | true | Show \\\"Edit this page\\\" links |\\n| `path` | string | 'docs' | Path to documentation within repo |\\n| `apiToken` | string | null | GitHub API token (can also be set via env var) |\\n\\n## Pull Request Previews\\n\\nFrameD can generate documentation previews for pull requests:\\n\\n```javascript\\ngithub: {\\n  repo: 'username/repo',\\n  branch: 'main',\\n  pullRequests: {\\n    enabled: true,              // Enable PR previews\\n    label: 'documentation',     // PR label for docs changes\\n    commentTemplate: '.github/pr-comment-template.md', // Custom PR comment template\\n    artifacts: {\\n      upload: true,             // Upload artifacts\\n      retention: 30             // Days to retain artifacts\\n    }\\n  },\\n}\\n```\\n\\n## GitHub Actions Workflow\\n\\nTo set up a GitHub Actions workflow for FrameD validation:\\n\\n1. Create a `.github/workflows/framed-validation.yml` file:\\n\\n```yaml\\nname: FrameD Documentation Validation\\n\\non:\\n  push:\\n    branches: [ main ]\\n  pull_request:\\n    branches: [ main ]\\n\\njobs:\\n  validate:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v2\\n      - name: Set up Node.js\\n        uses: actions/setup-node@v2\\n        with:\\n          node-version: '16'\\n      - name: Install dependencies\\n        run: npm install\\n      - name: Run FrameD validation\\n        run: npx framed validate\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n```\\n\\n## Issue Templates\\n\\nYou can also configure custom issue templates for documentation issues:\\n\\n```javascript\\ngithub: {\\n  issueTemplates: {\\n    docFeedback: '.github/ISSUE_TEMPLATE/documentation-feedback.md',\\n    docRequest: '.github/ISSUE_TEMPLATE/documentation-request.md',\\n  }\\n}\\n```\\n\\n## GitHub Pages Deployment\\n\\nFrameD can automatically deploy your documentation to GitHub Pages:\\n\\n```javascript\\ngithub: {\\n  pages: {\\n    enabled: true,\\n    branch: 'gh-pages',\\n    cname: 'docs.example.com', // Optional CNAME file content\\n    workflow: {\\n      auto: true,               // Auto-generate workflow file\\n      path: '.github/workflows/deploy-docs.yml' // Custom path\\n    }\\n  }\\n}\\n```\\n\""],"names":["github"],"mappings":"AAAA,MAAe}