{"version":3,"file":"github-actions-DeTycTFC.js","sources":["../../src/docs/github-actions.md?raw"],"sourcesContent":["export default \"\\n---\\ndate: 2023-09-05\\n---\\n\\n# GitHub Actions Overview\\n\\nAutomate documentation validation with GitHub Actions.\\n\\n## Overview\\n\\nDocuSanity integrates with GitHub Actions to automatically validate your documentation on every pull request and push. \\nThis ensures your documentation always meets quality standards before it gets published.\\n\\n## Benefits of GitHub Actions Integration\\n\\n- Automated validation on every pull request\\n- Catch documentation issues before they reach production\\n- Enforce style guide and terminology consistency\\n- Detailed reports for any issues found\\n\\n## Setting Up GitHub Actions\\n\\nTo set up GitHub Actions for your DocuSanity project, you need to create a workflow file in the `.github/workflows` directory of your repository.\\n\\n### 1. Create the workflow file\\n\\nCreate a file named `docusanity.yml` in the `.github/workflows` directory:\\n\\n```yaml\\nname: DocuSanity Validation\\n\\non:\\n  push:\\n    branches: [main]\\n  pull_request:\\n    branches: [main]\\n\\njobs:\\n  validate:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v3\\n      \\n      - name: Setup Node.js\\n        uses: actions/setup-node@v3\\n        with:\\n          node-version: '18'\\n          cache: 'npm'\\n      \\n      - name: Install dependencies\\n        run: npm ci\\n      \\n      - name: Run DocuSanity validation\\n        run: npx @docusanity/cli validate\\n        \\n      - name: Check for broken links\\n        run: npx @docusanity/cli check-links\\n        \\n      - name: Validate against dictionary\\n        run: npx @docusanity/cli check-dictionary\\n        \\n      - name: Enforce style guide\\n        run: npx @docusanity/cli check-style\\n```\\n\\n### 2. Configure validation rules\\n\\nYou can customize the validation rules by creating a `.docusanity` directory in the root of your project with the following configuration files:\\n\\n#### Link Validation Configuration\\n\\n```javascript\\n// .docusanity/links.config.js\\nmodule.exports = {\\n  excludePaths: [\\n    '**/node_modules/**',\\n    '**/build/**',\\n  ],\\n  checkExternal: true,\\n  ignorePatterns: [\\n    'mailto:*',\\n    'tel:*',\\n  ],\\n  maxConcurrency: 5,\\n};\\n```\\n\\n#### Dictionary Validation Configuration\\n\\n```javascript\\n// .docusanity/dictionary.config.js\\nmodule.exports = {\\n  customDictionaries: [\\n    '.docusanity/dictionaries/technical-terms.json',\\n    '.docusanity/dictionaries/product-names.json',\\n  ],\\n  caseSensitive: true,\\n  ignorePatterns: [\\n    '\\\\`\\\\`\\\\`[\\\\\\\\s\\\\\\\\S]*?\\\\`\\\\`\\\\`', // Ignore code blocks\\n  ],\\n};\\n```\\n\\n#### Style Guide Configuration\\n\\n```javascript\\n// .docusanity/style.config.js\\nmodule.exports = {\\n  rules: [\\n    {\\n      name: 'avoid-passive-voice',\\n      severity: 'warning',\\n    },\\n    {\\n      name: 'sentence-length',\\n      severity: 'error',\\n      options: {\\n        max: 100,\\n      },\\n    },\\n    {\\n      name: 'no-jargon',\\n      severity: 'warning',\\n      options: {\\n        terms: ['leverage', 'utilize', 'paradigm'],\\n      },\\n    },\\n  ],\\n  ignorePatterns: [\\n    '\\\\`\\\\`\\\\`[\\\\\\\\s\\\\\\\\S]*?\\\\`\\\\`\\\\`', // Ignore code blocks\\n  ],\\n};\\n```\\n\\n## Viewing Validation Results\\n\\nAfter the GitHub Actions workflow runs, you can view the validation results in several ways:\\n\\n- **GitHub Actions Tab:** Navigate to the Actions tab in your repository to see the detailed logs for each validation step.\\n- **Pull Request Checks:** The workflow status will be displayed in your pull requests, including any validation failures.\\n- **Detailed Reports:** For more detailed reports, you can configure the workflow to generate and upload artifacts containing full validation reports.\\n\\n### Generating and Uploading Reports\\n\\nTo generate and upload detailed reports, add the following steps to your workflow:\\n\\n```yaml\\n# Add these steps to your workflow\\n- name: Generate validation report\\n  run: npx @docusanity/cli validate --report-file=validation-report.json\\n  \\n- name: Upload validation report\\n  uses: actions/upload-artifact@v4\\n  with:\\n    name: validation-reports\\n    path: validation-report.json\\n```\\n\""],"names":["githubActions"],"mappings":"AAAA,MAAe}